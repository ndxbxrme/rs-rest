{
  "version": 3,
  "file": "client.js",
  "sourceRoot": "../src/",
  "sources": [
    "client.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "angular = window.angular or require 'angular'\r\nmoduleName = 'rs-rest'\r\nthrottle = require './throttle'\r\ncache = require './cache'\r\nspecialProps = require './special-props'\r\nthrottleTime = 200\r\nangular.module moduleName, []\r\n.factory 'rest', ($http, $injector) ->\r\n  socket = null\r\n  if $injector.has 'socket'\r\n    socket = $injector.get 'socket'\r\n  endpoints = {}\r\n  loading = 0\r\n  startLoading = ->\r\n    loading++\r\n  stopLoading = ->\r\n    loading = Math.max loading - 1, 0\r\n  socketFetch = (data) ->\r\n    cache.clearCache data.table\r\n    endpoints[data.table].fetch true\r\n  if socket\r\n    socket = $injector.get 'socket'\r\n    socket.on 'update', socketFetch\r\n    socket.on 'insert', socketFetch\r\n    socket.on 'delete', socketFetch\r\n  save: (endpoint, obj, cb) ->\r\n    startLoading()\r\n    $http.post \"/api/#{endpoint}/#{obj._id or ''}\", obj\r\n    .then (response) ->\r\n      socket or endpoints[endpoint].fetch()\r\n      stopLoading()\r\n      cb? obj\r\n    , (err) ->\r\n      stopLoading()\r\n      cb? obj\r\n  'delete': (endpoint, obj) ->\r\n    startLoading()\r\n    $http.delete \"/api/#{endpoint}/#{obj._id or ''}\", obj\r\n    .then (response) ->\r\n      socket or endpoints[endpoint].fetch()\r\n      stopLoading()\r\n      cb? obj\r\n    , (err) ->\r\n      stopLoading()\r\n      cb? obj\r\n  search: (endpoint, items, isSocket, cb) ->\r\n    isSocket or startLoading()\r\n    handleResponse = (response) ->\r\n      clonedProps = null\r\n      if items and items.length\r\n        clonedProps = specialProps.clone items\r\n      items.length = 0\r\n      if response.items\r\n        for item in response.items\r\n          items.push item\r\n        if clonedProps\r\n          specialProps.restore items, clonedProps\r\n      items.$total = response.total\r\n      isSocket or stopLoading()\r\n      cb? items\r\n    if response = cache.fetchFromCache endpoint, items.$args\r\n      handleResponse response\r\n    else\r\n      $http.post '/api/' + endpoint + '/search', items.$args\r\n      .then (res) ->\r\n        if res.status is 200\r\n          cache.addToCache endpoint, items.$args, res.data\r\n          handleResponse res.data\r\n      , ->\r\n        items.length = 0\r\n        items.$total = 0\r\n        isSocket or stopLoading()\r\n        cb? items\r\n  single: (endpoint, id, item, isSocket, cb) ->\r\n    isSocket or startLoading()\r\n    handleResponse = (response) ->\r\n      isSocket or stopLoading()\r\n      clonedProps = null\r\n      if item and Object.keys(item).length\r\n        clonedProps = specialProps.clone item\r\n        delete item[key] for key of item\r\n      if response\r\n        item[key] = response[key] for key of response\r\n      if item and clonedProps\r\n        specialProps.restore item, clonedProps\r\n      cb? item\r\n    id = escape JSON.stringify id if typeof(id) is 'object'\r\n    if response = cache.fetchFromCache endpoint, id:id\r\n      handleResponse response\r\n    else\r\n      $http.get \"/api/#{endpoint}/#{id}#{if item.$all then '/all' else ''}\"\r\n      .then (response) ->\r\n        cache.addToCache endpoint, {id:id}, response.data\r\n        handleResponse response.data\r\n      , (err) ->\r\n        isSocket or stopLoading()\r\n        cb? item\r\n  add: (endpoint, obj) ->\r\n    endpoints[endpoint] = endpoints[endpoint] or\r\n      objs: []\r\n      fetch: throttle (isSocket) ->\r\n        for obj in endpoints[endpoint].objs\r\n          obj.$fetch isSocket\r\n      , throttleTime, true\r\n    endpoints[endpoint].objs.push obj  \r\n  remove: (endpoint, obj) ->\r\n      endpoints[endpoint].objs.splice endpoints[endpoint].objs.indexOf(obj), 1  \r\n.run ($rootScope, $http, $timeout, rest) ->\r\n  $rootScope.$list = (endpoint, args, cb) ->\r\n    loadCount = 0\r\n    callbacks = {}\r\n    callback = (name, obj) ->\r\n      if callbacks[name]\r\n        cb(obj) for cb in callbacks[name]\r\n    items = []\r\n    items.$args = args\r\n    items.$fetch = (isSocket) ->\r\n      return if items.$locked\r\n      rest.search endpoint, items, isSocket, ->\r\n        loadCount++\r\n        callback 'firstload', items if loadCount is 1\r\n        callback 'load', items\r\n    items.$save = (item, checkFn) ->\r\n      if checkFn\r\n        checkFn 'save', endpoint, item\r\n        .then -> rest.save endpoint, item, ->\r\n          callback 'save', item\r\n      else\r\n        rest.save endpoint, item, ->\r\n          callback 'save', item\r\n    items.$on = (name, fn) ->\r\n      callbacks[name] = callbacks[name] or []\r\n      callbacks[name].push fn\r\n    rest.add endpoint, items\r\n    deref = @.$watch ->\r\n      items.$args\r\n    , items.$fetch, true\r\n    @.$on '$destroy', ->\r\n      deref()\r\n      rest.remove endpoint, items\r\n    items\r\n  $rootScope.$single = (endpoint, id, cb) ->\r\n    loadCount = 0\r\n    callbacks = {}\r\n    callback = (name, obj) ->\r\n      if callbacks[name]\r\n        cb(obj) for cb in callbacks[name]\r\n    item = {}\r\n    item.$fetch = (isSocket) ->\r\n      return if item.$locked\r\n      rest.single endpoint, id, item, isSocket, ->\r\n        loadCount++\r\n        callback 'firstload', item if loadCount is 1\r\n        callback 'load', item\r\n    item.$save = (checkFn) ->\r\n      if checkFn\r\n        checkFn 'save', endpoint, item\r\n        .then -> rest.save endpoint, item, ->\r\n          callback 'save', item\r\n      else\r\n        rest.save endpoint, item, ->\r\n          callback 'save', item\r\n    item.$on = (name, fn) ->\r\n      callbacks[name] = callbacks[name] or []\r\n      callbacks[name].push fn\r\n    rest.add endpoint, item\r\n    @.$on '$destroy', ->\r\n      rest.remove endpoint, item\r\n    item.$fetch()\r\n    item\r\nmodule.exports = moduleName"
  ]
}